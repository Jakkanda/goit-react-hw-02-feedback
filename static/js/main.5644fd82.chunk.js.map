{"version":3,"sources":["components/Statistics/Statistics.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Notification/Notification.module.css","components/FeedbackOptions/FeedbackOptions.jsx","components/Statistics/Statistics.jsx","components/Section/Section.jsx","components/Notification/Notification.jsx","App.js","reportWebVitals.js","index.js"],"names":["module","exports","FeedbackOptions","this","props","options","Array","isArray","map","elem","index","type","onClick","onLeaveFeedBack","className","styled","button","Component","Statistics","list","item","good","neutral","bad","countTotalFeedback","countPositiveFeedbackPercentage","Section","title","children","Notification","message","notification","App","state","handlerClick","e","chooseButton","target","textContent","toLowerCase","setState","prevState","Object","values","reduce","sum","current","toFixed","startToRender","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+HACAA,EAAOC,QAAU,CAAC,KAAO,yBAAyB,KAAO,2B,uBCAzDD,EAAOC,QAAU,CAAC,OAAS,kC,gBCA3BD,EAAOC,QAAU,CAAC,aAAe,qC,4LCEpBC,EAAb,4JACE,WAAU,IAAD,OACP,OACE,mCACGC,KAAKC,MAAMC,SACVC,MAAMC,QAAQJ,KAAKC,MAAMC,UACzBF,KAAKC,MAAMC,QAAQG,KAAI,SAACC,EAAMC,GAC5B,OACE,wBACEC,KAAK,SACLC,QAAS,EAAKR,MAAMS,gBAEpBC,UAAWC,IAAOC,OAJpB,SAMGP,GAHIC,YAXrB,GAAqCO,a,gBCAxBC,EAAb,4JACE,WACE,OACE,qBAAIJ,UAAWC,IAAOI,KAAtB,UACE,qBAAIL,UAAWC,IAAOK,KAAtB,mBAAmCjB,KAAKC,MAAMiB,QAC9C,qBAAIP,UAAWC,IAAOK,KAAtB,sBAAsCjB,KAAKC,MAAMkB,WACjD,qBAAIR,UAAWC,IAAOK,KAAtB,kBAAkCjB,KAAKC,MAAMmB,OAC7C,qBAAIT,UAAWC,IAAOK,KAAtB,oBAAoCjB,KAAKC,MAAMoB,sBAC/C,qBAAIV,UAAWC,IAAOK,KAAtB,gCACsBjB,KAAKC,MAAMqB,gCADjC,eARR,GAAgCR,aCDnBS,EAAU,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAC/B,OACE,gCACE,6BAAKD,IACJC,M,iBCHMC,EAAe,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAC7B,OAAO,mBAAGhB,UAAWC,IAAOgB,aAArB,SAAoCD,KC4D9BE,E,4MAxDbC,MAAQ,CACNZ,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPW,aAAe,SAAAC,GACb,IAAMC,EAAeD,EAAEE,OAAOC,YAAYC,cAC1C,EAAKC,UAAS,SAAAC,GAAS,sBACpBL,EAAeK,EAAUL,GAAgB,O,4CAI9C,WACE,IAAMZ,EAAqBkB,OAAOC,OAAOxC,KAAK8B,OAAOW,QAAO,SAC1DC,EACAC,GAEA,OAAOD,EAAMC,IAEf,GAEMrB,GACHtB,KAAK8B,MAAMZ,KAAOG,EACnB,KACAuB,QAAQ,GAEJC,EACgB,IAApB7C,KAAK8B,MAAMZ,MAAqC,IAAvBlB,KAAK8B,MAAMX,SAAoC,IAAnBnB,KAAK8B,MAAMV,IAClE,OACE,sBAAKT,UAAU,MAAf,UACE,cAAC,EAAD,CAASa,MAAM,wBAAf,SACE,cAAC,EAAD,CACEtB,QAAS,CAAC,OAAQ,UAAW,OAC7BQ,gBAAiBV,KAAK+B,iBAI1B,cAAC,EAAD,CAASP,MAAM,aAAf,SACGqB,EACC,cAAC,EAAD,CACE3B,KAAMlB,KAAK8B,MAAMZ,KACjBC,QAASnB,KAAK8B,MAAMX,QACpBC,IAAKpB,KAAK8B,MAAMV,IAChBC,mBAAoBA,EACpBC,gCAAiCA,IAGnC,cAAC,EAAD,CAAcK,QAAQ,+B,GAjDhBb,aCKHgC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5644fd82.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Statistics_list__3ECWP\",\"item\":\"Statistics_item__-BtDx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__2VU7i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification___E69f\"};","import React, { Component } from 'react';\r\nimport styled from './FeedbackOptions.module.css';\r\n\r\nexport class FeedbackOptions extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.props.options &&\r\n          Array.isArray(this.props.options) &&\r\n          this.props.options.map((elem, index) => {\r\n            return (\r\n              <button\r\n                type=\"button\"\r\n                onClick={this.props.onLeaveFeedBack}\r\n                key={index}\r\n                className={styled.button}\r\n              >\r\n                {elem}\r\n              </button>\r\n            );\r\n          })}\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport styled from './Statistics.module.css';\r\n\r\nexport class Statistics extends Component {\r\n  render() {\r\n    return (\r\n      <ul className={styled.list}>\r\n        <li className={styled.item}>Good: {this.props.good}</li>\r\n        <li className={styled.item}>Neutral: {this.props.neutral}</li>\r\n        <li className={styled.item}>Bad: {this.props.bad}</li>\r\n        <li className={styled.item}>Total: {this.props.countTotalFeedback}</li>\r\n        <li className={styled.item}>\r\n          Positive feedback: {this.props.countPositiveFeedbackPercentage} %\r\n        </li>\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\n\r\nexport const Section = ({ title, children }) => {\r\n  return (\r\n    <div>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport styled from './Notification.module.css';\r\n\r\nexport const Notification = ({ message }) => {\r\n  return <p className={styled.notification}>{message}</p>;\r\n};\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { FeedbackOptions } from './components/FeedbackOptions/FeedbackOptions';\r\nimport { Statistics } from './components/Statistics/Statistics';\r\nimport { Section } from './components/Section/Section';\r\nimport { Notification } from './components/Notification/Notification';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  handlerClick = e => {\r\n    const chooseButton = e.target.textContent.toLowerCase();\r\n    this.setState(prevState => ({\r\n      [chooseButton]: prevState[chooseButton] + 1,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const countTotalFeedback = Object.values(this.state).reduce(function (\r\n      sum,\r\n      current,\r\n    ) {\r\n      return sum + current;\r\n    },\r\n    0);\r\n    \r\n    const countPositiveFeedbackPercentage = (\r\n      (this.state.good / countTotalFeedback) *\r\n      100\r\n    ).toFixed(0);\r\n\r\n    const startToRender =\r\n      this.state.good !== 0 || this.state.neutral !== 0 || this.state.bad !== 0;\r\n    return (\r\n      <div className=\"App\">\r\n        <Section title=\"Please leave feedback\">\r\n          <FeedbackOptions\r\n            options={['Good', 'Neutral', 'Bad']}\r\n            onLeaveFeedBack={this.handlerClick}\r\n          />\r\n        </Section>\r\n\r\n        <Section title=\"Statistics\">\r\n          {startToRender ? (\r\n            <Statistics\r\n              good={this.state.good}\r\n              neutral={this.state.neutral}\r\n              bad={this.state.bad}\r\n              countTotalFeedback={countTotalFeedback}\r\n              countPositiveFeedbackPercentage={countPositiveFeedbackPercentage}\r\n            />\r\n          ) : (\r\n            <Notification message=\"No feedback given\" />\r\n          )}\r\n        </Section>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}